#!/bin/bash

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

TERRAFORM_DIR="infra/terraform"

echo -e "${GREEN}üèóÔ∏è  Iniciando deploy da infraestrutura...${NC}"

# Verificar se Terraform est√° instalado
if ! command -v terraform &> /dev/null; then
    echo -e "${RED}‚ùå Terraform n√£o est√° instalado${NC}"
    exit 1
fi

# Verificar se AWS CLI est√° configurado
echo -e "${GREEN}üîç Verificando autentica√ß√£o AWS...${NC}"
if ! aws sts get-caller-identity &> /dev/null; then
    echo -e "${RED}‚ùå AWS CLI n√£o est√° configurado${NC}"
    echo -e "${YELLOW}Configure suas credenciais AWS com: aws configure${NC}"
    echo -e "${YELLOW}Ou configure as vari√°veis de ambiente:${NC}"
    echo -e "${YELLOW}  AWS_ACCESS_KEY_ID=sua-access-key${NC}"
    echo -e "${YELLOW}  AWS_SECRET_ACCESS_KEY=sua-secret-key${NC}"
    echo -e "${YELLOW}  AWS_REGION=us-east-1${NC}"
    exit 1
fi

# Mostrar conta AWS atual
echo -e "${GREEN}‚úÖ Conectado √† AWS:${NC}"
aws sts get-caller-identity

cd $TERRAFORM_DIR

# Inicializar Terraform
echo -e "${GREEN}üîß Inicializando Terraform...${NC}"
terraform init

# Validar configura√ß√£o
echo -e "${GREEN}‚úÖ Validando configura√ß√£o...${NC}"
terraform validate

# Mostrar plano
echo -e "${GREEN}üìã Mostrando plano de execu√ß√£o...${NC}"
terraform plan

# Confirmar deploy
read -p "Deseja aplicar as mudan√ßas? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${GREEN}üöÄ Aplicando mudan√ßas...${NC}"
    terraform apply -auto-approve
    
    # Mostrar outputs
    echo -e "${GREEN}‚úÖ Infraestrutura criada com sucesso!${NC}"
    echo -e "${YELLOW}üìä Outputs:${NC}"
    terraform output
    
    # Obter IP da inst√¢ncia
    EC2_IP=$(terraform output -raw public_ip)
    echo -e "${GREEN}üéâ Inst√¢ncia EC2 criada: $EC2_IP${NC}"
    echo -e "${YELLOW}Para conectar: ssh -i infra/terraform/ssh/ecommerce ubuntu@$EC2_IP${NC}"
else
    echo -e "${YELLOW}‚ùå Deploy cancelado${NC}"
fi 